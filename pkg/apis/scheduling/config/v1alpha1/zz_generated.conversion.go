//go:build !ignore_autogenerated
// +build !ignore_autogenerated

/*
Copyright 2022 The Katalyst Authors.

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// Code generated by conversion-gen. DO NOT EDIT.

package v1alpha1

import (
	unsafe "unsafe"

	config "github.com/kubewharf/katalyst-api/pkg/apis/scheduling/config"
	conversion "k8s.io/apimachinery/pkg/conversion"
	runtime "k8s.io/apimachinery/pkg/runtime"
	v1 "k8s.io/kube-scheduler/config/v1"
	apisconfig "k8s.io/kubernetes/pkg/scheduler/apis/config"
)

func init() {
	localSchemeBuilder.Register(RegisterConversions)
}

// RegisterConversions adds conversion functions to the given scheme.
// Public to allow building arbitrary schemes.
func RegisterConversions(s *runtime.Scheme) error {
	if err := s.AddGeneratedConversionFunc((*QoSAwareNodeResourcesBalancedAllocationArgs)(nil), (*config.QoSAwareNodeResourcesBalancedAllocationArgs)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_v1alpha1_QoSAwareNodeResourcesBalancedAllocationArgs_To_config_QoSAwareNodeResourcesBalancedAllocationArgs(a.(*QoSAwareNodeResourcesBalancedAllocationArgs), b.(*config.QoSAwareNodeResourcesBalancedAllocationArgs), scope)
	}); err != nil {
		return err
	}
	if err := s.AddGeneratedConversionFunc((*config.QoSAwareNodeResourcesBalancedAllocationArgs)(nil), (*QoSAwareNodeResourcesBalancedAllocationArgs)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_config_QoSAwareNodeResourcesBalancedAllocationArgs_To_v1alpha1_QoSAwareNodeResourcesBalancedAllocationArgs(a.(*config.QoSAwareNodeResourcesBalancedAllocationArgs), b.(*QoSAwareNodeResourcesBalancedAllocationArgs), scope)
	}); err != nil {
		return err
	}
	if err := s.AddGeneratedConversionFunc((*QoSAwareNodeResourcesFitArgs)(nil), (*config.QoSAwareNodeResourcesFitArgs)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_v1alpha1_QoSAwareNodeResourcesFitArgs_To_config_QoSAwareNodeResourcesFitArgs(a.(*QoSAwareNodeResourcesFitArgs), b.(*config.QoSAwareNodeResourcesFitArgs), scope)
	}); err != nil {
		return err
	}
	if err := s.AddGeneratedConversionFunc((*config.QoSAwareNodeResourcesFitArgs)(nil), (*QoSAwareNodeResourcesFitArgs)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_config_QoSAwareNodeResourcesFitArgs_To_v1alpha1_QoSAwareNodeResourcesFitArgs(a.(*config.QoSAwareNodeResourcesFitArgs), b.(*QoSAwareNodeResourcesFitArgs), scope)
	}); err != nil {
		return err
	}
	if err := s.AddGeneratedConversionFunc((*ScoringStrategy)(nil), (*config.ScoringStrategy)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_v1alpha1_ScoringStrategy_To_config_ScoringStrategy(a.(*ScoringStrategy), b.(*config.ScoringStrategy), scope)
	}); err != nil {
		return err
	}
	if err := s.AddGeneratedConversionFunc((*config.ScoringStrategy)(nil), (*ScoringStrategy)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_config_ScoringStrategy_To_v1alpha1_ScoringStrategy(a.(*config.ScoringStrategy), b.(*ScoringStrategy), scope)
	}); err != nil {
		return err
	}
	return nil
}

func autoConvert_v1alpha1_QoSAwareNodeResourcesBalancedAllocationArgs_To_config_QoSAwareNodeResourcesBalancedAllocationArgs(in *QoSAwareNodeResourcesBalancedAllocationArgs, out *config.QoSAwareNodeResourcesBalancedAllocationArgs, s conversion.Scope) error {
	out.Resources = *(*[]apisconfig.ResourceSpec)(unsafe.Pointer(&in.Resources))
	out.ReclaimedResources = *(*[]apisconfig.ResourceSpec)(unsafe.Pointer(&in.ReclaimedResources))
	return nil
}

// Convert_v1alpha1_QoSAwareNodeResourcesBalancedAllocationArgs_To_config_QoSAwareNodeResourcesBalancedAllocationArgs is an autogenerated conversion function.
func Convert_v1alpha1_QoSAwareNodeResourcesBalancedAllocationArgs_To_config_QoSAwareNodeResourcesBalancedAllocationArgs(in *QoSAwareNodeResourcesBalancedAllocationArgs, out *config.QoSAwareNodeResourcesBalancedAllocationArgs, s conversion.Scope) error {
	return autoConvert_v1alpha1_QoSAwareNodeResourcesBalancedAllocationArgs_To_config_QoSAwareNodeResourcesBalancedAllocationArgs(in, out, s)
}

func autoConvert_config_QoSAwareNodeResourcesBalancedAllocationArgs_To_v1alpha1_QoSAwareNodeResourcesBalancedAllocationArgs(in *config.QoSAwareNodeResourcesBalancedAllocationArgs, out *QoSAwareNodeResourcesBalancedAllocationArgs, s conversion.Scope) error {
	out.Resources = *(*[]v1.ResourceSpec)(unsafe.Pointer(&in.Resources))
	out.ReclaimedResources = *(*[]v1.ResourceSpec)(unsafe.Pointer(&in.ReclaimedResources))
	return nil
}

// Convert_config_QoSAwareNodeResourcesBalancedAllocationArgs_To_v1alpha1_QoSAwareNodeResourcesBalancedAllocationArgs is an autogenerated conversion function.
func Convert_config_QoSAwareNodeResourcesBalancedAllocationArgs_To_v1alpha1_QoSAwareNodeResourcesBalancedAllocationArgs(in *config.QoSAwareNodeResourcesBalancedAllocationArgs, out *QoSAwareNodeResourcesBalancedAllocationArgs, s conversion.Scope) error {
	return autoConvert_config_QoSAwareNodeResourcesBalancedAllocationArgs_To_v1alpha1_QoSAwareNodeResourcesBalancedAllocationArgs(in, out, s)
}

func autoConvert_v1alpha1_QoSAwareNodeResourcesFitArgs_To_config_QoSAwareNodeResourcesFitArgs(in *QoSAwareNodeResourcesFitArgs, out *config.QoSAwareNodeResourcesFitArgs, s conversion.Scope) error {
	out.ScoringStrategy = (*config.ScoringStrategy)(unsafe.Pointer(in.ScoringStrategy))
	return nil
}

// Convert_v1alpha1_QoSAwareNodeResourcesFitArgs_To_config_QoSAwareNodeResourcesFitArgs is an autogenerated conversion function.
func Convert_v1alpha1_QoSAwareNodeResourcesFitArgs_To_config_QoSAwareNodeResourcesFitArgs(in *QoSAwareNodeResourcesFitArgs, out *config.QoSAwareNodeResourcesFitArgs, s conversion.Scope) error {
	return autoConvert_v1alpha1_QoSAwareNodeResourcesFitArgs_To_config_QoSAwareNodeResourcesFitArgs(in, out, s)
}

func autoConvert_config_QoSAwareNodeResourcesFitArgs_To_v1alpha1_QoSAwareNodeResourcesFitArgs(in *config.QoSAwareNodeResourcesFitArgs, out *QoSAwareNodeResourcesFitArgs, s conversion.Scope) error {
	out.ScoringStrategy = (*ScoringStrategy)(unsafe.Pointer(in.ScoringStrategy))
	return nil
}

// Convert_config_QoSAwareNodeResourcesFitArgs_To_v1alpha1_QoSAwareNodeResourcesFitArgs is an autogenerated conversion function.
func Convert_config_QoSAwareNodeResourcesFitArgs_To_v1alpha1_QoSAwareNodeResourcesFitArgs(in *config.QoSAwareNodeResourcesFitArgs, out *QoSAwareNodeResourcesFitArgs, s conversion.Scope) error {
	return autoConvert_config_QoSAwareNodeResourcesFitArgs_To_v1alpha1_QoSAwareNodeResourcesFitArgs(in, out, s)
}

func autoConvert_v1alpha1_ScoringStrategy_To_config_ScoringStrategy(in *ScoringStrategy, out *config.ScoringStrategy, s conversion.Scope) error {
	out.Type = config.ScoringStrategyType(in.Type)
	out.Resources = *(*[]apisconfig.ResourceSpec)(unsafe.Pointer(&in.Resources))
	out.ReclaimedResources = *(*[]apisconfig.ResourceSpec)(unsafe.Pointer(&in.ReclaimedResources))
	out.RequestedToCapacityRatio = (*apisconfig.RequestedToCapacityRatioArguments)(unsafe.Pointer(in.RequestedToCapacityRatio))
	out.ReclaimedRequestedToCapacityRatio = (*apisconfig.RequestedToCapacityRatioArguments)(unsafe.Pointer(in.ReclaimedRequestedToCapacityRatio))
	return nil
}

// Convert_v1alpha1_ScoringStrategy_To_config_ScoringStrategy is an autogenerated conversion function.
func Convert_v1alpha1_ScoringStrategy_To_config_ScoringStrategy(in *ScoringStrategy, out *config.ScoringStrategy, s conversion.Scope) error {
	return autoConvert_v1alpha1_ScoringStrategy_To_config_ScoringStrategy(in, out, s)
}

func autoConvert_config_ScoringStrategy_To_v1alpha1_ScoringStrategy(in *config.ScoringStrategy, out *ScoringStrategy, s conversion.Scope) error {
	out.Type = config.ScoringStrategyType(in.Type)
	out.Resources = *(*[]v1.ResourceSpec)(unsafe.Pointer(&in.Resources))
	out.ReclaimedResources = *(*[]v1.ResourceSpec)(unsafe.Pointer(&in.ReclaimedResources))
	out.RequestedToCapacityRatio = (*v1.RequestedToCapacityRatioArguments)(unsafe.Pointer(in.RequestedToCapacityRatio))
	out.ReclaimedRequestedToCapacityRatio = (*v1.RequestedToCapacityRatioArguments)(unsafe.Pointer(in.ReclaimedRequestedToCapacityRatio))
	return nil
}

// Convert_config_ScoringStrategy_To_v1alpha1_ScoringStrategy is an autogenerated conversion function.
func Convert_config_ScoringStrategy_To_v1alpha1_ScoringStrategy(in *config.ScoringStrategy, out *ScoringStrategy, s conversion.Scope) error {
	return autoConvert_config_ScoringStrategy_To_v1alpha1_ScoringStrategy(in, out, s)
}
